#!/usr/bin/env bash


# constants
# ---------
wifi_file="/etc/wpa_supplicant/wifi_networks"
wifi_config="$DOTFILES$wifi_file"
wifi_card="wlp3s0"

# reconnect using wpa_supplicant
# ------------------------------
wifi_connect() {
    sudo pkill wpa_supplicant
    sudo dhcpcd -k
    sudo wpa_supplicant -B -Dnl80211 -i"$wifi_card" -c"$wifi_file"
    sudo dhcpcd "$wifi_card"
}

# scan for networks in area
# -------------------------
wifi_scan() {
    sudo iw dev "$wifi_card" scan \
        | grep 'SSID:' \
        | sed -e 's/^[ \t]*SSID:[ \t]*//' \
        | grep -v '\x00'
}

# get network status
# ------------------
wifi_list() {
    net_card="$1"
    [[ -z "$net_card" ]] && net_card="$wifi_card"
    ip route | grep 'default' | cut --delimiter=' ' --fields='5,8' \
        |   case "$net_card" in
                first)
                    head -n1
                    ;;
                second)
                    head -n2 | tail -n1
                    ;;
                *)
                    grep "$net_card"
                    ;;
            esac \
        | cut --delimiter=' ' --field='2'
}

# create new network connection
# -----------------------------
wifi_new() {
    ssid="$1"
    [[ -z "$ssid" ]] && return 1
    printf "[o]pen or [c]losed network: "
    read network_type
    echo
    echo "Outputing to '$wifi_config'..."
    case "$network_type" in
        o*|O*)
            echo 'network={'            | tee -a "$wifi_config"
            echo '    ssid="'"$ssid"'"' | tee -a "$wifi_config"
            echo '    key_mgmt=NONE'    | tee -a "$wifi_config"
            echo '}'                    | tee -a "$wifi_config"
            ;;
        c*|C*)
            echo "enter passphrase..."
            wpa_passphrase "$ssid" | tee -a "$wifi_config"
            ;;
        *)
            echo "Unrecognized network type: '$network_type'"
            ;;
    esac
}

# nice interactive wifi-finder
# ----------------------------
wifi_menu() {
    counter=0
    typeset -A networks
    wifi_scan | while read wifi_network; do
        networks[$counter]="$wifi_network"
        echo "$counter: $wifi_network"
        counter="$(($counter + 1))"
    done
    printf "Which network: "
    read network_num
    if [[ "$network_num" -lt '0' || "$network_num" -gt "${#networks}" ]]; then
        echo "Out of range."
        return 1
    fi
    wifi_new "${networks[$network_num]}" $@
}

# interface
# ---------
wifi_command="$1"
shift
case "$wifi_command" in
    c|connect)
        wifi_connect $@
        ;;
    s|scan)
        wifi_scan $@
        ;;
    n|new)
        wifi_new $@
        ;;
    m|menu)
        wifi_menu $@
        ;;
    l|list)
        wifi_list $@
        ;;
    *)
        echo "Unrecognized command: '$wifi_command'"
        ;;
esac
