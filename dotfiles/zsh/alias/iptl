# InterPlanetary Test Lab aliases

kub() {
    cmd="$1"
    shift
    case "$cmd" in
        "pod") kub_pod $@            ;;
        "cmd") kub_cmd $@            ;;
        *)     kubectl "$cmd" $@     ;;
    esac
}

kub_pod() {
    pod_name="$1"
    [[ -z "$pod_name" ]] && return 1
    kubectl get pods --namespace=monitoring | grep "$pod_name" | awk '{print $1}'
}

kub_cmd() {
    pod_id=$(kub_pod "$1")
    cmd="$2"
    [[ -z "$cmd" ]] && return 1
    kubectl exec --namespace=monitoring "$pod_id" -t -- bash -c "$cmd"
}

grafana_pf() {
    grafana_pod=$(kub_pod grafana-core)
    kubectl port-forward --namespace=monitoring "$grafana_pod" 3000:3000
}

# ipfs-cluster dev aliases

alias ics='ipfs-cluster-service'

# manage clusters through systemd
cluster() {

    cmd_arg="$1"
    instance_arg="$2"

    case "$instance_arg" in
        1)     instance='1'     ;;
        2)     instance='2'     ;;
        a|all) instance='{1,2}' ;;
        *)     instance=''      ;;
    esac

    case "$cmd_arg" in
        start)       cmd="start ipfs$instance" ;;
        stop)        cmd="stop ipfs$instance"  ;;
        restart)     cmd='restart'             ;;
        stat|status) cmd='status'              ;;
        *)           return 1                  ;;
    esac

    eval systemctl --user $cmd ipfs-cluster$instance
}

# cluster ctl commands
icc() {

    instance_arg="$1"

    case "$instance_arg" in
        1) config='--host "127.0.0.1:9194"'
           shift
           ;;
        2) config='--host "127.0.0.1:9294"'
           shift
           ;;
        *) config='' ;;
    esac

    eval ipfs-cluster-ctl $config $@
}
