#!/usr/bin/env zsh

wenv_setup() {
    unset WENV_DIR
    unset WENV_ALIASES
    WENV_PROJECT='wenv'

    wenv_init() { }
}

wenv() {
    wenv_command="$1"
    shift
    case "$wenv_command" in
        s|start)
            wenv_start $@
            ;;
        st|stop)
            wenv_stop $@
            ;;
        r|reset)
            wenv_reset $@
            ;;
        t|task|tasks) # TODO: "tasks?"
            wenv_tasks $@
            ;;
        c|'cd')
            wenv_cd $@
            ;;
        e|edit)
            wenv_edit @@
            ;;
        sa|source_aliases)
            wenv_source_aliases $@
            ;;
        exec)
            wenv_exec $@
            ;;
        mv|rename)
            wenv_rename $@
            ;;
        *)
            echo "Unrecognized command: '$wenv_command'"
            ;;
    esac
}

wenv_start() {
    [[ $# == 0 ]] && return 1

    wenv_stop
    wenv_exec $@

    if [[ -n "$TMUX" ]]; then
        tmux set-environment WENV "$WENV"
        tmux rename-window "$WENV"
    fi

    wenv_init
    unset -f wenv_init
}

wenv_exec() {
    flag_c=1
    flag_n=1
    while getopts ":cn" opt; do
        case $opt in
            c) flag_c=0 ;;
            n) flag_n=0 ;;
        esac
    done
    shift $((OPTIND -1))

    [[ -z "$1" ]] && return 1
    export WENV="$1"

    wenv_load "$WENV"
    wenv_source_aliases

    if [[ $flag_c -eq 1 ]]; then
        cd "$WENV_DIR" &> /dev/null
        [[ ! -z "$WENV_BRANCH" ]] && gco "$WENV_BRANCH" &> /dev/null | grep -v '^Already'
    fi
    [[ $flag_n -eq 1 ]] && wenv_tasks_show

    export PS1="($WENV) $ORIGINAL_PS1"
}

wenv_stop() {
    [[ -z "$WENV" ]] && return 1

    wenv_cd
    [[ ! -z "$WENV_BRANCH" ]] && git checkout master

    unset WENV
    unset WENV_{DIR,ALIASES,PROJECT,BRANCH}

    if [[ -n "$TMUX" ]]; then
        tmux set-environment WENV ''
        tmux rename-window ''
    fi
    export PS1="$ORIGINAL_PS1"
}

wenv_cd() {
    if [[ -z "$1" ]]; then
        cd "$WENV_DIR" &> /dev/null
        return 1
    fi
    wenv="$1"

    wenv_load "$wenv"
    cd "$WENV_DIR"

    wenv_load "$WENV"
    unset wenv_init
}

wenv_load() {
    [[ -z "$1" ]] && return 1
    wenv="$1"
    source_alias "$wenv" > /dev/null
    wenv_setup
}

wenv_edit() {
    [[ -z "$WENV" ]] && return 1
    edit_alias "$WENV"
}

wenv_reset() {
    [[ -n "TMUX" ]] && tmux set-environment WENV "$WENV"
}

wenv_tasks() {
    arg="$1"
    shift 2> /dev/null
    case "$arg" in
        s|show)
            wenv_tasks_show $@
            ;;
        a|add)
            wenv_tasks_add $@
            ;;
        *)
            wenv_tasks_show "$arg" $@
            ;;
    esac
}

wenv_tasks_show() {
    report="$1"
    [[ -z "$report" ]] && report="project"

    echo "$WENV_PROJECT"
    task "$report" project:"$WENV_PROJECT"
}

wenv_tasks_add() {
    [[ -z "$1" ]] && return 1
    desc="$1"
    shift
    task add project:"$WENV_PROJECT" tags:"$WENV" description:"$desc" $@
}

wenv_source_aliases() {  
    for wenv_alias in $WENV_ALIASES; do
        source_alias "$wenv_alias" > /dev/null
    done
}

wenv_rename() {
    [[ $# != 2 ]] && return 1
    old="$1_aliases"
    new="$2_aliases"

    mv "$ALIASES/$old" "$ALIASES/$new"
}

wenv_tmux_split() {
    cmd='ZSH_INIT="unset WENV; wenv exec -cn \"$WENV\"" zsh -i'
    case "$1" in
        h)
            tmux split-window -h -c "#{pane_current_path}" "$cmd"
            ;;
        v)
            tmux split-window -c "#{pane_current_path}" "$cmd"
            ;;
        *)
            return 1
            ;;
    esac
}
