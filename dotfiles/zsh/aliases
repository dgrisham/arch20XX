#!/bin/zsh

# Shortcuts
# =========

becho() { echo '\033[0;34m'$@'\033[0m' }
gecho() { echo '\033[0;32m'$@'\033[0m' }
recho() { echo '\033[0;31m'$@'\033[0m' }

# convenient cd
# -------------
c() {                       # cd with bookmarks
    dirname="$1"
    case "$dirname" in      # bookmarks
        ipfs)     dirname="$GOPATH/src/github.com/ipfs/go-ipfs" ;;
        iptl)     dirname="$GOPATH/src/github.com/ipfs/kubernetes-ipfs" ;;
        cluster)  dirname="$GOPATH/src/github.com/ipfs/kubernetes-ipfs" ;;
        sessions) dirname="$GOPATH/src/github.com/ipfs/kubernetes-ipfs/bitswap-sessions" ;;
        web)      dirname="$SCRATCH/flasky"       ;;
        dev)      dirname="$SRC/arch20xx"         ;;
        res)      dirname="$HOME/work/research"   ;;
        egt)      dirname="$HOME/work/research/resources/papers/egt"   ;;
        498|game) dirname="$HOME/work/csci_498B"  ;;
        564|arch) dirname="$HOME/work/csci_564"   ;;
        240)      dirname="$HOME/work/stanford-cs240h/"   ;;
        ta)       dirname="$HOME/work/ta"      ;;
        med)      dirname="$PERSONAL/schedule/routine/morning/meditation/headspace/creativity_series/1" ;;
        pygame)   dirname="$SCRATCH/pygame/doodle_jump" ;;
        dec)      dirname="$SRC/decoy-routing"    ;;
        "")       dirname="$HOME"                 ;;
        *)        return 1                        ;;
    esac
    cd "$dirname"
    unset dirname           # for dir displayed in prompt
}

# open pdf, refresh tmux on close
# -------------------------------
pdf() {
    # note: update to check for jfbview
    # $VIEWER "$1"
    jfbview "$1"
    tmux refresh-client
}
# open pdf as plaintext
# ---------------------
tdf() {
    lesspipe.sh "$1" | less
}

# markdown publishing
md() {
    format="$1"
    md_doc="$2"

    case "$format" in
        markdown)   ext='md'                    ;;
        latex)      ext='pdf'                   ;;
        latex-raw)  ext='tex'; format='latex'   ;;
        beamer)     ext='pdf'                   ;;
        beamer-raw) ext='tex'; format='beamer'  ;;
        *)          ext="$format"               ;;
    esac

    pandoc --standalone --filter=pandoc-citeproc \
           --from=markdown --to="$format" \
           --output="${md_doc%.*}.$ext" "$md_doc" \
        || echo "pandoc error ..."
}

# latex building
# --------------
tex() {
    [[ -z "$1" ]] && return 1
    file="$1"
    prefix=${file%.*}

    pdflatex --shell-escape "$prefix".tex &&
    bibtex                  "$prefix"     &&
    pdflatex --shell-escape "$prefix".tex &&
    pdflatex --shell-escape "$prefix".tex

    rm -f $prefix.{out,snm,aux,toc,nav,lo?}
}

# cmus with lyrics and cover art
# ------------------------------
alias cf='cmus_full && exit'

# start existing vim session
# --------------------------
alias vs="vim -S"

# `$EDITOR <today's_date>.md`
# -----------------------
et() {
    format='%Y-%m-%d'
    $EDITOR "`date +$format`.md"
}

# 'journal today'
# ---------------
jt() {
    format='%Y-%m-%d'
    journal_dir="$PERSONAL/routine/morning/journal/five_minute_journal"
    cp -n "$journal_dir/template.md" "$journal_dir/`date +$format`.md"
    cd "$journal_dir"
    kt
}

# copy etc
# --------
cp_etc() {
    dir="$1"
    [[ ! -d "$DOTFILES/etc/$dir" ]] && return 1
    for file in $(find "$DOTFILES/etc/$dir" -type f); do
        sudo cp "$file" "${file#$DOTFILES}"
    done
}

# edit alias file
# ---------------
edit_alias() {
    if [[ $# -eq 0 ]]; then
        print_aliases
        return 1
    fi
    input_arg="$1"

    case "$input_arg" in
        g|global)
            alias_file="$GLOBAL_ALIAS"
            ;;
        l|local)
            alias_file="$LOCAL_ALIAS"
            ;;
        *)
            alias_file="$ALIASES/${input_arg}_aliases"
            ;;
    esac

    "$EDITOR" "$alias_file"
}
alias ea='edit_alias'

# remove alias file
# -----------------
remove_alias() {
    if [[ $# -eq 0 ]]; then
        print_aliases
        return 1
    fi

    input_arg="$1"
    case "$input_arg" in
        '-f')
            force=true
            shift
            ;;
        *)
            force=false
            ;;
    esac

    alias_file="$ALIASES/${1}_aliases"

    [[ -f "$alias_file" ]] || return 1

    # confirm with user if 'force' flag not provided
    if [[ "$force" = false ]]; then
        echo -n "Remove $alias_file (y/n)? "
        read choice
       
        if ! echo "$choice" | grep -iq "^y"; then
            return 1
        fi
    fi

    rm -f "$alias_file"
}
alias ra='remove_alias'

# source alias file
# -----------------
source_alias() {
    # if no input, print list of possible inputs and return
    if [[ $# -eq 0 ]]; then
        print_aliases
        return 1
    fi
    # check input(s), source associated alias file(s) accordingly
    input_arg="$1"
    shift
    case "$input_arg" in
        g|global)
            alias_file="$GLOBAL_ALIAS"
            ;;
        l|local)
            alias_file="$LOCAL_ALIAS"
            ;;
        *)
            alias_file="$ALIASES/${input_arg}_aliases"
            ;;
    esac
    if [[ -f "$alias_file" ]]; then
        echo "sourcing $alias_file"
        source "$alias_file"
    fi
    [[ $# -gt 0 ]] && source_alias $@
}
alias sa='source_alias'

### print alias file options (helper for {source,edit}_alias)
print_aliases() {
        echo "options:"
        echo "  - global (g)"
        echo "  - local (l)"
        ls -lh "$ALIASES" | tail -n +2 | awk '{ print $9 }' | sed -e "s/\([^_ ]\+\)_aliases/  - \1/"
}

# general git (more in git_aliases)
# ---------------------------------
alias gc='git commit -m'
alias gca='git commit -am'
alias gs='git status'
alias gl="git log --pretty=format:'%C(auto)%h %ad %C(green)%s%Creset %C(auto)%d [%an]' --graph --date=format:'%Y-%m-%d %H:%M' --all"

alias gco='git checkout'

start_environments() {
    envs=$@
    for env in $(echo "$envs" | sed -r 's/, ?/\n/g'); do
        start_environment -n "$env"
    done
}
alias ses='start_environments'

# Task Warrior
# ============

alias ta='unbuffer task active | sed \$d'

# Source additional aliases
# =========================
[[ -n "$DISPLAY" ]] && source_alias 'x' > /dev/null
source_alias 'wenv' > /dev/null
source_alias 'python' > /dev/null
source_alias 'ipfs' > /dev/null
